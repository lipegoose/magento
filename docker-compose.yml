version: "3.7" 
services:
  # Web service layer - vers√£o atual do nginx 1.17.19 (13 abr 2020) - fonte: https://hub.docker.com/_/nginx/
  nginx:
    image: nginx
    restart: always
    volumes:
      - "./www:/var/www/html"
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      # - ./mysite.template:/etc/nginx/conf.d/mysite.template
      #- "./logs/nginx-error.log:/var/log/nginx/error.log"
      #- "./logs/nginx-access.log:/var/log/nginx/access.log"
    ports:
      - "80:80"
    environment:
    #   - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    # command: /bin/bash -c "envsubst < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - php

  # Application service layer
  php:
    image: lipegoose/php7.4-fpm_composer
    # build:
    #   context: ./php
    restart: always
    volumes:
      - "./www:/var/www/html"
      - "./php/php.ini:/usr/local/etc/php/conf.d/php.ini:ro"
      # - "./php/php.ini:/usr/local/etc/php/php.ini"
    ports:
      - "9000:9000"
    depends_on:
      - mysql
    environment:
      - MYSQL_USER=root
      - MYSQL_PASS=root
  
  # Data persistence service layer
  mysql:
    image: mysql:5.7.20
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      - "./db_data:/var/lib/mysql"
      - "./mysql/initial_data:/docker-entrypoint-initdb.d"
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
#volumes:
#  db_data:
